When would you want to use a remote repository rather than keeping all your work
local?

    When I want to work in a team, with other people.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If I'm working independently on my own branch, if code gets updated, I might lose some of my work. So it's better if I pull manually

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are used when I simply want to copy code from one repository to another, and not interfere with it again. Clone is when I want to copy code from a remote to my computer, so that I can keep changing it, and updating the remote. Branches are simply a feature with which multiple developers can work on the same remote, while working on their own features.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fetch command can work offline, and the last known state of the remote can be viewed without internet access.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Collaborating would be very hard without Git/Github. A person would have to be appointed for collaborating work. All developers would be mailing their code to this person, and he would be doing the job of merging code. Using Git is way better.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When working in a large team, it makes sense for each developer to work on his own branch, and keep merging with master, so that the master as a whole keeps getting better. On the other hand for developing software where only 1 developer is involved, having 1 branch is sufficient.
