What happens when you initialize a repository? Why do you need to do it?

	It creates the basic files for git to start using the metadata which will track our edits.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area is the bridge between the working directory and the repository. It offers developers to options to choose what to commit, there by making this technology more flexible.

How can you use the staging area to make sure you have one commit per logical
change?

	I could use git diff, and the various features it offers to compare the staging area and working directory, and only commit if there is a logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	If any new feature is to be added, the developer could make changes in a new branch, so that master branch is not disturbed.

How do the diagrams help you visualize the branch structure?

	Since with the addition of branches, the structure of the repository becomes non-linear, it becomes difficult to understand the structure of the branches. Having a diagram helps.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	It is represented in the diagram as such because it's like we're combining the 2 branches into one branch.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

	Pros of automatic merging are that developers won't have to waste time on it. Git can take care of different additions/deletions. Cons are that in case of conflict, automatic merging might lead to bugs. Also if 2 users write the same function with different name, git will merge it.